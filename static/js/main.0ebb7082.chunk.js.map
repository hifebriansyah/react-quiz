{"version":3,"sources":["components/Cutter.js","components/Hamburger.js","components/Title.js","pages/Menu.js","components/Course.js","pages/Courses.js","components/Option.js","components/Question.js","pages/Questions.js","pages/New.js","pages/Result.js","serviceWorker.js","index.js"],"names":["Cutter","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","className","onRouteChanged","props","location","pathname","prevProps","class","setState","react_default","a","createElement","Component","Hamburger","linkTo","Link","to","Title","title","indexOf","Menu","Course","item","items","map","i","key","total","content","price","style","backgroundImage","id","name","link","Courses","courses","_this2","fetch","then","response","json","result","data","course","components_Course","Option","type","categoryId","questionId","value","onClick","onChooseOption","Question","options","option","components_Option","data-id","Questions","questions","selections","position","match","params","shuffleArray","question","components_Question","category","optionId","renderQuestion","array","length","j","Math","floor","random","_ref","count","_this3","_this4","checked","document","querySelectorAll","Array","prototype","e","querySelector","display","keys","getElementsByClassName","children","appendChild","innerHTML","String","fromCharCode","encodeURIComponent","CryptoJS","AES","encrypt","JSON","stringify","window","replace","_this5","onNavigate","onFinish","New","Result","urlParams","URLSearchParams","search","parse","decrypt","decodeURIComponent","get","toString","enc","Utf8","console","log","Boolean","hostname","ReactDOM","render","BrowserRouter","Route","components_Cutter","components_Hamburger","components_Title","Switch","path","exact","component","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0ebb7082.chunk.js","sourcesContent":["import React, { Component } from \"react\"\r\n\r\nclass Cutter extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tclassName: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.onRouteChanged(this.props.location.pathname)\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (this.props.location.pathname !== prevProps.location.pathname) {\r\n\t\t\tthis.onRouteChanged(this.props.location.pathname)\r\n\t\t}\r\n\t}\r\n\r\n\tonRouteChanged(pathname) {\r\n\t\tvar className = this.state.class;\r\n\r\n\t\tif (pathname === \"/\") {\r\n\t\t\tclassName = \"diagonal\";\r\n\t\t} else if (pathname === \"/menu\")  {\r\n\t\t\tclassName = \"full\"\r\n\t\t}  else{\r\n\t\t\tclassName = \"flat\"\r\n\t\t}\r\n\r\n\t\tthis.setState({className});\r\n\t}\r\n\r\n    render() {\r\n\t\treturn (\r\n\t\t\t<div className={this.state.className + \" cutter\"}></div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Cutter;","import React, { Component } from \"react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport '../styles/hamburger.css';\r\n\r\nclass Hamburger extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tclassName: \"\",\r\n\t\t\tlinkTo: \"/\"\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.onRouteChanged(this.props.location.pathname)\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (this.props.location.pathname !== prevProps.location.pathname) {\r\n\t\t\tthis.onRouteChanged(this.props.location.pathname)\r\n\t\t}\r\n\t}\r\n\r\n\tonRouteChanged(pathname) {\r\n\t\tvar className = \"\";\r\n\t\tvar linkTo = \"/\";\r\n\r\n\t\tif (pathname === \"/\") {\r\n\t\t\tlinkTo = \"/menu\";\r\n\t\t} else if (pathname === \"/menu\")  {\r\n\t\t\tclassName = \"back\"\r\n\t\t} else {\r\n\t\t\tclassName = \"cross\"\r\n\t\t}\r\n\r\n\t\tthis.setState({className, linkTo});\r\n\t}\r\n\r\n    render() {\r\n\t\treturn (\r\n\t\t\t<Link to={this.state.linkTo} className={this.state.className + \" hamburger\"}>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t</Link>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Hamburger;","import React, { Component } from \"react\"\r\nimport '../styles/title.css';\r\n\r\nclass Title extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\ttitle: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.onRouteChanged(this.props.location.pathname)\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (this.props.location.pathname !== prevProps.location.pathname) {\r\n\t\t\tthis.onRouteChanged(this.props.location.pathname)\r\n\t\t}\r\n\t}\r\n\r\n\tonRouteChanged(pathname) {\r\n\t\tvar title = 'ScrumTeam.id';\r\n\r\n\t\tif (pathname.indexOf('questions') !== -1) {\r\n\t\t\ttitle = \"Exam\";\r\n\t\t}\r\n\r\n\t\tthis.setState({title});\r\n\t}\r\n\r\n    render() {\r\n\t\treturn (\r\n\t\t\t<div className=\"title\">{this.state.title}</div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Title;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport '../styles/menu.css';\r\n\r\nconst Menu = (props) => {\r\n    return(\r\n        <div className=\"menu\">\r\n            <Link to=\"/\">Courses</Link>\r\n            <Link to=\"/\">Articles</Link>\r\n            <Link to=\"/\">About Us</Link>\r\n            <span>v0.1</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Menu;","import React from \"react\";\r\nimport '../styles/course.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Course = (props) => {\r\n\tlet item = props.items.map((item, i) => {\r\n\t\treturn (\r\n\t\t\t<tr key={i}>\r\n\t\t\t\t<td>{item.total}</td>\r\n\t\t\t\t<td>{item.content}</td>\r\n\t\t\t\t<td className=\"green\">{item.price}</td>\r\n\t\t\t</tr>\r\n\t\t)                 \r\n\t});\r\n\r\n    return(\r\n\t\t<div className=\"course\">\r\n\t\t\t<div className=\"top\" style={{backgroundImage:'linear-gradient(rgba(100, 100, 100, 0), rgba(100, 100, 100, 0.8)), url(/'+props.id+'.jpeg)'}}>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h1>{props.name}</h1>\r\n\t\t\t\t\t<p>{props.content}</p>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"bottom\">\r\n\t\t\t\t<span>This section includes</span>  :\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{item}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t<Link to={\"/questions/\"+props.link} className=\"btn\">Let's go!</Link>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default Course;\r\n","import React, { Component } from 'react';\r\nimport Course from '../components/Course';\r\nimport '../styles/courses.css';\r\n\r\nclass Courses extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tcourses: []\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch(\"https://gist.githubusercontent.com/hifebriansyah/5f62028cf655a6b5af592986057d88ef/raw/courses.json\")\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then(result => {\r\n\t\t\t\tlet courses = result.data.map((course, i) => {     \r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Course \r\n\t\t\t\t\t\t\tname={course.name}\r\n\t\t\t\t\t\t\tid={course.id}\r\n\t\t\t\t\t\t\titems={course.items}\r\n\t\t\t\t\t\t\tcontent={course.content}\r\n\t\t\t\t\t\t\tlink={course.link}\r\n\t\t\t\t\t\t\tkey={course.id}/>\r\n\t\t\t\t\t)                 \r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.setState({courses})\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"courses page\">\r\n\t\t\t\t{this.state.courses}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Courses;\r\n","import React from \"react\"\r\nimport '../styles/option.css';\r\n\r\nconst Option = (props) => {\r\n\tlet type =  (props.categoryId === 1) ? \"radio\" : \"checkbox\";\r\n\r\n    return(\r\n\t    <label className=\"option\">\r\n\t        <input\r\n\t        \tname={\"option\"+props.questionId}\r\n\t        \tvalue={props.id}\r\n\t        \ttype={type}\r\n\t        \tonClick={() => props.onChooseOption(props.questionId, props.id, props.categoryId)} />\r\n\t        <div><span></span> {props.content}</div>\r\n\t\t</label>\r\n    )\r\n}\r\n\r\nexport default Option;\r\n","import React from \"react\";\r\nimport Option from '../components/Option';\r\nimport '../styles/question.css';\r\n\r\nconst Question = (props) => {\r\n\tlet options = props.options.map((option, i) => { \r\n\t\treturn (\r\n\t\t\t<Option\r\n\t\t\t \tquestionId={props.id}\r\n\t\t\t\tid={option.id}\r\n\t\t\t\tcontent={option.content}\r\n\t\t\t\tkey={option.id}\r\n\t\t\t\tcategoryId={props.categoryId}\r\n\t\t\t\tonChooseOption={props.onChooseOption}/>\r\n\t\t)                 \r\n\t});\r\n\r\n    return(\r\n        <div className=\"question\" data-id={props.id}>\r\n        \t<p>{props.content}</p>\r\n        \t<div className=\"options\">\r\n        \t\t{options}\r\n        \t</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question;\r\n","import React, { Component } from 'react';\r\nimport CryptoJS from 'crypto-js';\r\nimport Question from '../components/Question';\r\nimport '../styles/questions.css';\r\n\r\nclass Questions extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tdata: [],\r\n\t\t\tquestions: [],\r\n\t\t\tselections:{},\r\n\t\t\tposition: 0\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch(\"https://gist.githubusercontent.com/hifebriansyah/5f62028cf655a6b5af592986057d88ef/raw/\"+this.props.match.params.id+\".json\")\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then(result => {\r\n\t\t\t\tlet data = result.data;\r\n\r\n\t\t\t\tthis.shuffleArray(data);\r\n\r\n\t\t\t\tlet questions = data.map((question, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Question\r\n\t\t\t\t\t\t\tkey={question.id}\r\n\t\t\t\t\t\t\tid={question.id}\r\n\t\t\t\t\t\t\tcontent={question.content}\r\n\t\t\t\t\t\t\toptions={question.options}\r\n\t\t\t\t\t\t\tcategoryId={question.category.id}\r\n\t\t\t\t\t\t\tonChooseOption={(questionId, optionId, categoryId) => this.onChooseOption(questionId, optionId, categoryId)}/>\r\n\t\t\t\t\t)                 \r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.setState({questions, data});\r\n\t\t\t\tthis.renderQuestion();\r\n\t\t\t});\r\n\t}\r\n\r\n\tshuffleArray(array) {\r\n\t    for (let i = array.length - 1; i > 0; i--) {\r\n\t        const j = Math.floor(Math.random() * (i + 1));\r\n\t        [array[i], array[j]] = [array[j], array[i]];\r\n\t    }\r\n\t}\r\n\r\n\tonNavigate(count) {\r\n\t\tlet position = (count && (this.state.position < this.state.questions.length - 1))\r\n\t\t\t? this.state.position + 1\r\n\t\t\t: (!count && this.state.position > 0)\r\n\t\t\t\t? this.state.position - 1\r\n\t\t\t\t: this.state.position\r\n\r\n\t\tthis.setState({position}, () => {\r\n\t\t    this.renderQuestion();\r\n\t\t});\r\n\t}\r\n\r\n\tonChooseOption(questionId, optionId, categoryId) {\r\n\t\tlet selections = this.state.selections;\r\n\r\n\t\tselections[questionId] = [optionId];\r\n\r\n\t\tif(categoryId === 2) {\r\n\t\t\tvar checked = document.querySelectorAll('[name=option'+questionId+']:checked');\r\n\t\t    selections[questionId] = Array.prototype.map.call(checked, function (e) {return e.value;});\r\n\r\n\t\t\tif(!selections[questionId].length){\r\n\t\t\t\tdelete selections[questionId]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState({selections}, () => {\r\n\t\t\tdocument.querySelector(\".finish\").style.display = (Object.keys(selections).length === this.state.questions.length) ? 'block' : 'none';\r\n\t\t});\r\n\t}\r\n\r\n\trenderQuestion() {\r\n\t\tlet questions = document.querySelectorAll('.question');\r\n\r\n\t\tfor (let i=0; i < questions.length; i++) {\r\n\t\t    questions[i].style.display = 'none';\r\n\t\t}\r\n\r\n\t\tlet options = document.getElementsByClassName(\"question\")[this.state.position].children[1];\r\n\r\n\t\tfor (let i = options.children.length; i >= 0; i--) {\r\n\t\t    options.appendChild(options.children[Math.random() * i | 0]);\r\n\t\t}\r\n\r\n\t\tfor (let i=0; i < options.children.length; i++) {\r\n\t\t     options.children[i].children[1].children[0].innerHTML = String.fromCharCode(65+i) + \")\";\r\n\t\t}\r\n\r\n\t\tdocument.getElementsByClassName(\"question\")[this.state.position].style.display = 'block';\r\n\t\tdocument.querySelector(\".previous\").style.display = (this.state.position !== 0) ? 'block' : 'none';\r\n\t\tdocument.querySelector(\".next\").style.display = (this.state.position !== this.state.questions.length - 1) ? 'block' : 'none';\r\n\t}\r\n\r\n\tonFinish() {\r\n\t\tlet selections = encodeURIComponent(CryptoJS.AES.encrypt(JSON.stringify(this.state.selections), 'selections'));\r\n\t\tlet questions = encodeURIComponent(CryptoJS.AES.encrypt(JSON.stringify(this.state.data), 'questions'));\r\n\t\twindow.location.replace(\"/validate.html?selections=\" + selections + \"&questions=\" +  questions);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"questions page\"> \r\n\t\t\t\t{this.state.questions}\r\n\t\t\t\t<div className=\"clear\">\r\n\t        \t\t<div className=\"previous\" onClick={() => this.onNavigate(0)}>Prev</div>\r\n\t        \t\t<div className=\"page-number\">{this.state.position + 1} of {Object.keys(this.state.questions).length}</div>\r\n\t        \t\t<div className=\"next\" onClick={() => this.onNavigate(1)}>Next</div>\r\n        \t\t</div>\r\n        \t\t<div className=\"finish\" onClick={() => this.onFinish()}>Finish</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Questions;\r\n","import React from \"react\"\r\n\r\nconst New = (props) => {\r\n    return(\r\n        <div className=\"div\">\r\n            ini div\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default New;\r\n","import React, { Component } from 'react';\r\nimport CryptoJS from 'crypto-js';\r\nimport '../styles/result.css';\r\n\r\nclass Result extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tresult: null\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\ttry {\r\n\t\t\tconst urlParams = new URLSearchParams(window.location.search);\r\n\t\t\tlet result = JSON.parse(CryptoJS.AES.decrypt(decodeURIComponent(urlParams.get('result')), 'result').toString(CryptoJS.enc.Utf8));\r\n\t\t\tconsole.log(result);\r\n\t    } catch (e) {}\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"result\">\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Result;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Cutter from './components/Cutter';\r\nimport Hamburger from './components/Hamburger';\r\nimport Title from './components/Title';\r\nimport Menu from './pages/Menu';\r\nimport Courses from './pages/Courses';\r\nimport Questions from './pages/Questions';\r\nimport New from './pages/New';\r\nimport Result from './pages/Result';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './styles/index.css';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\n\r\nconst AppRouter = () => (\r\n\t<Router>\r\n\t\t<div className=\"container\">\r\n\t\t\t<Route render={(props) => <Cutter {...props} />} />\r\n\t\t\t\r\n\t\t\t<header className=\"clear\">\r\n\t\t\t\t<Route render={(props) => <Hamburger {...props} />} />\r\n\t\t\t\t<Route render={(props) => <Title {...props} />} />\r\n\t\t\t</header>\r\n\t\t\t\r\n\t\t\t<div className=\"pages\">\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/\" exact component={Courses} />\r\n\t\t\t\t\t<Route path=\"/Menu\" component={Menu} />\r\n\t\t\t\t\t<Route path=\"/result\" component={Result} />\r\n\t\t\t\t\t<Route path=\"/questions/:id\" component={Questions} />\r\n\t\t\t\t\t<Route path=\"/new\" component={New} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</Router>\r\n);\r\n\r\n\r\nReactDOM.render(<AppRouter />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}