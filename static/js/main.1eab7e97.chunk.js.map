{"version":3,"sources":["components/Exam.js","pages/Menu.js","components/Option.js","components/Question.js","pages/Questions.js","pages/Result.js","serviceWorker.js","index.js"],"names":["Exam","props","react_default","a","createElement","Link","className","to","id","name","Menu","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","exams","_this2","fetch","then","response","json","result","data","map","exam","i","components_Exam","key","setState","Component","Option","type","categoryId","questionId","value","onClick","onChooseOption","content","Question","options","option","components_Option","data-id","eq","Questions","questions","selections","position","shuffleArray","question","components_Question","category","optionId","renderQuestion","array","length","j","Math","floor","random","_ref","count","_this3","_this4","checked","document","querySelectorAll","Array","prototype","e","querySelector","style","display","keys","getElementsByClassName","children","appendChild","innerHTML","String","fromCharCode","encodeURIComponent","CryptoJS","AES","encrypt","JSON","stringify","window","location","replace","_this5","onNavigate","onFinish","Result","urlParams","URLSearchParams","search","parse","decrypt","decodeURIComponent","get","toString","enc","Utf8","console","log","Boolean","hostname","match","ReactDOM","render","BrowserRouter","Switch","Route","path","exact","component","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1eab7e97.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../styles/exam.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Exam = (props) => {\r\n    return(\r\n\t\t<Link className=\"exam\" to={\"/questions/\"+props.id}>{props.name}</Link>\r\n    )\r\n}\r\n\r\nexport default Exam;\r\n","import React, { Component } from 'react';\r\nimport Exam from '../components/Exam';\r\nimport '../styles/menu.css';\r\n\r\nclass Menu extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\texams: []\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch(\"https://gist.githubusercontent.com/hifebriansyah/3aed8358fc634ff6f1b5d1ae52ec1dc4/raw\")\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then(result => {\r\n\t\t\t\tlet exams = result.data.map((exam, i) => {     \r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Exam \r\n\t\t\t\t\t\t\tname={exam.name}\r\n\t\t\t\t\t\t\tid={exam.id}\r\n\t\t\t\t\t\t\tkey={exam.id}/>\r\n\t\t\t\t\t)                 \r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.setState({exams})\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"menu\">\r\n\t\t\t\t{this.state.exams}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Menu;\r\n","import React from \"react\"\r\nimport '../styles/option.css';\r\n\r\nconst Option = (props) => {\r\n\tlet type =  (props.categoryId === 1) ? \"radio\" : \"checkbox\";\r\n\r\n    return(\r\n\t    <label className=\"option\">\r\n\t        <input\r\n\t        \tname={\"option\"+props.questionId}\r\n\t        \tvalue={props.id}\r\n\t        \ttype={type}\r\n\t        \tonClick={() => props.onChooseOption(props.questionId, props.id, props.categoryId)} />\r\n\t        <div><span></span> {props.content}</div>\r\n\t\t</label>\r\n    )\r\n}\r\n\r\nexport default Option;\r\n","import React from \"react\";\r\nimport Option from '../components/Option';\r\nimport '../styles/question.css';\r\n\r\nconst Question = (props) => {\r\n\tlet options = props.options.map((option, i) => { \r\n\t\treturn (\r\n\t\t\t<Option\r\n\t\t\t \tquestionId={props.id}\r\n\t\t\t\tid={option.id}\r\n\t\t\t\tcontent={option.content}\r\n\t\t\t\tkey={option.id}\r\n\t\t\t\tcategoryId={props.categoryId}\r\n\t\t\t\tonChooseOption={props.onChooseOption}/>\r\n\t\t)                 \r\n\t});\r\n\r\n    return(\r\n        <div className=\"question\" data-id={props.id}>\r\n        \t<p>{props.eq}. {props.content}</p>\r\n        \t<div className=\"options\">\r\n        \t\t{options}\r\n        \t</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question;\r\n","import React, { Component } from 'react';\r\nimport CryptoJS from 'crypto-js';\r\nimport Question from '../components/Question';\r\nimport '../styles/questions.css';\r\n\r\nclass Questions extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tdata: [],\r\n\t\t\tquestions: [],\r\n\t\t\tselections:{},\r\n\t\t\tposition: 0\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch(\"https://gist.githubusercontent.com/hifebriansyah/5f62028cf655a6b5af592986057d88ef/raw\")\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then(result => {\r\n\t\t\t\tlet data = result.data;\r\n\r\n\t\t\t\tthis.shuffleArray(data);\r\n\r\n\t\t\t\tlet questions = data.map((question, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Question\r\n\t\t\t\t\t\t\teq={i+1}\r\n\t\t\t\t\t\t\tkey={question.id}\r\n\t\t\t\t\t\t\tid={question.id}\r\n\t\t\t\t\t\t\tcontent={question.content}\r\n\t\t\t\t\t\t\toptions={question.options}\r\n\t\t\t\t\t\t\tcategoryId={question.category.id}\r\n\t\t\t\t\t\t\tonChooseOption={(questionId, optionId, categoryId) => this.onChooseOption(questionId, optionId, categoryId)}/>\r\n\t\t\t\t\t)                 \r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.setState({questions, data});\r\n\t\t\t\tthis.renderQuestion();\r\n\t\t\t});\r\n\t}\r\n\r\n\tshuffleArray(array) {\r\n\t    for (let i = array.length - 1; i > 0; i--) {\r\n\t        const j = Math.floor(Math.random() * (i + 1));\r\n\t        [array[i], array[j]] = [array[j], array[i]];\r\n\t    }\r\n\t}\r\n\r\n\tonNavigate(count) {\r\n\t\tlet position = (count && (this.state.position < this.state.questions.length - 1))\r\n\t\t\t? this.state.position + 1\r\n\t\t\t: (!count && this.state.position > 0)\r\n\t\t\t\t? this.state.position - 1\r\n\t\t\t\t: this.state.position\r\n\r\n\t\tthis.setState({position}, () => {\r\n\t\t    this.renderQuestion();\r\n\t\t});\r\n\t}\r\n\r\n\tonChooseOption(questionId, optionId, categoryId) {\r\n\t\tlet selections = this.state.selections;\r\n\r\n\t\tselections[questionId] = [optionId];\r\n\r\n\t\tif(categoryId === 2) {\r\n\t\t\tvar checked = document.querySelectorAll('[name=option'+questionId+']:checked');\r\n\t\t    selections[questionId] = Array.prototype.map.call(checked, function (e) {return e.value;});\r\n\r\n\t\t\tif(!selections[questionId].length){\r\n\t\t\t\tdelete selections[questionId]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState({selections}, () => {\r\n\t\t\tdocument.querySelector(\".finish\").style.display = (Object.keys(selections).length === this.state.questions.length) ? 'block' : 'none';\r\n\t\t});\r\n\t}\r\n\r\n\trenderQuestion() {\r\n\t\tlet questions = document.querySelectorAll('.question');\r\n\r\n\t\tfor (let i=0; i < questions.length; i++) {\r\n\t\t    questions[i].style.display = 'none';\r\n\t\t}\r\n\r\n\t\tlet options = document.getElementsByClassName(\"question\")[this.state.position].children[1];\r\n\r\n\t\tfor (let i = options.children.length; i >= 0; i--) {\r\n\t\t    options.appendChild(options.children[Math.random() * i | 0]);\r\n\t\t}\r\n\r\n\t\tfor (let i=0; i < options.children.length; i++) {\r\n\t\t     options.children[i].children[1].children[0].innerHTML = String.fromCharCode(65+i) + \")\";\r\n\t\t}\r\n\r\n\t\tdocument.getElementsByClassName(\"question\")[this.state.position].style.display = 'block';\r\n\t\tdocument.querySelector(\".previous\").style.display = (this.state.position !== 0) ? 'block' : 'none';\r\n\t\tdocument.querySelector(\".next\").style.display = (this.state.position !== this.state.questions.length - 1) ? 'block' : 'none';\r\n\t}\r\n\r\n\tonFinish() {\r\n\t\tlet selections = encodeURIComponent(CryptoJS.AES.encrypt(JSON.stringify(this.state.selections), 'selections'));\r\n\t\tlet questions = encodeURIComponent(CryptoJS.AES.encrypt(JSON.stringify(this.state.data), 'questions'));\r\n\t\twindow.location.replace(\"http://localhost:3000/result.html?selections=\" + selections + \"&questions=\" +  questions);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"questions\"> \r\n\t\t\t\t{this.state.questions}\r\n\t\t\t\t<div className=\"clear\">\r\n\t        \t\t<div className=\"previous\" onClick={() => this.onNavigate(0)}>previous</div>\r\n\t        \t\t<div className=\"next\" onClick={() => this.onNavigate(1)}>next</div>\r\n        \t\t</div>\r\n        \t\t<div className=\"finish\" onClick={() => this.onFinish()}>finish</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Questions;\r\n","import React, { Component } from 'react';\r\nimport CryptoJS from 'crypto-js';\r\nimport '../styles/result.css';\r\n\r\nclass Result extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tresult: null\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\ttry {\r\n\t\t\tconst urlParams = new URLSearchParams(window.location.search);\r\n\t\t\tlet result = JSON.parse(CryptoJS.AES.decrypt(decodeURIComponent(urlParams.get('result')), 'result').toString(CryptoJS.enc.Utf8));\r\n\t\t\tconsole.log(result);\r\n\t    } catch (e) {}\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"result\">\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Result;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Menu from './pages/Menu';\nimport Questions from './pages/Questions';\nimport Result from './pages/Result';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/index.css';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\n\nconst AppRouter = () => (\n\t<Router>\n\t\t<div>\n\t\t\t<nav>\n\t\t\t\t<ul>\n\t\t\t\t\t<li><Link to=\"/\">Menu</Link></li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t\t<Switch>\n\t\t\t\t<Route path=\"/\" exact component={Menu} />\n\t\t\t\t<Route path=\"/result\" component={Result} />\n\t\t\t\t<Route path=\"/questions/:id\" component={Questions} />\n\t\t\t</Switch>\n\t\t</div>\n\t</Router>\n);\n\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}