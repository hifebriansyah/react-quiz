{"version":3,"sources":["components/Exam.js","pages/Menu.js","components/Cutter.js","components/Option.js","components/Question.js","pages/Questions.js","pages/New.js","pages/Result.js","serviceWorker.js","index.js"],"names":["Exam","props","item","items","map","i","react_default","a","createElement","key","total","content","className","price","name","Link","to","link","Menu","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","exams","_this2","fetch","then","response","json","result","data","exam","components_Exam","id","setState","Component","Cutter","onRouteChanged","location","pathname","prevProps","class","Option","type","categoryId","questionId","value","onClick","onChooseOption","Question","options","option","components_Option","data-id","eq","Questions","questions","selections","position","match","params","shuffleArray","question","components_Question","category","optionId","renderQuestion","array","length","j","Math","floor","random","_ref","count","_this3","_this4","checked","document","querySelectorAll","Array","prototype","e","querySelector","style","display","keys","getElementsByClassName","children","appendChild","innerHTML","String","fromCharCode","encodeURIComponent","CryptoJS","AES","encrypt","JSON","stringify","window","replace","_this5","onNavigate","onFinish","New","Result","urlParams","URLSearchParams","search","parse","decrypt","decodeURIComponent","get","toString","enc","Utf8","console","log","Boolean","hostname","ReactDOM","render","BrowserRouter","Route","components_Cutter","Switch","path","exact","component","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ec9ed88a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport '../styles/exam.css';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Exam = (props) => {\r\n\tlet item = props.items.map((item, i) => {\r\n\t\treturn (\r\n\t\t\t<tr key={i}>\r\n\t\t\t\t<td>{item.total}</td>\r\n\t\t\t\t<td>{item.content}</td>\r\n\t\t\t\t<td className=\"green\">{item.price}</td>\r\n\t\t\t</tr>\r\n\t\t)                 \r\n\t});\r\n\r\n    return(\r\n\t\t<div className=\"exam\">\r\n\t\t\t<div className=\"top\">\r\n\t\t\t\t<h1>{props.name}</h1>\r\n\t\t\t\t<p>{props.content}</p>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<div></div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"bottom\">\r\n\t\t\t\t<span>This section includes</span>  :\r\n\t\t\t\t<table>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{item}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</table>\r\n\t\t\t\t<Link to={\"/questions/\"+props.link} className=\"btn\">Let's go!</Link>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default Exam;\r\n","import React, { Component } from 'react';\r\nimport Exam from '../components/Exam';\r\nimport '../styles/menu.css';\r\n\r\nclass Menu extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\texams: []\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch(\"https://gist.githubusercontent.com/hifebriansyah/5f62028cf655a6b5af592986057d88ef/raw/exams.json\")\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then(result => {\r\n\t\t\t\tlet exams = result.data.map((exam, i) => {     \r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Exam \r\n\t\t\t\t\t\t\tname={exam.name}\r\n\t\t\t\t\t\t\tid={exam.id}\r\n\t\t\t\t\t\t\titems={exam.items}\r\n\t\t\t\t\t\t\tcontent={exam.content}\r\n\t\t\t\t\t\t\tlink={exam.link}\r\n\t\t\t\t\t\t\tkey={exam.id}/>\r\n\t\t\t\t\t)                 \r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.setState({exams})\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"menu page\">\r\n\t\t\t\t{this.state.exams}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from \"react\"\r\n\r\nclass Cutter extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tclassName: \"\"\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.onRouteChanged(this.props.location.pathname)\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps) {\r\n\t\tif (this.props.location.pathname !== prevProps.location.pathname) {\r\n\t\t\tthis.onRouteChanged(this.props.location.pathname)\r\n\t\t}\r\n\t}\r\n\r\n\tonRouteChanged(pathname) {\r\n\t\tvar className = this.state.class;\r\n\r\n\t\tif (pathname === \"/\") {\r\n\t\t\tclassName = \"diagonal\";\r\n\t\t} else{\r\n\t\t\tclassName = \"flat\"\r\n\t\t}\r\n\r\n\t\tthis.setState({className});\r\n\t}\r\n\r\n    render() {\r\n\t\treturn (\r\n\t\t\t<div className={this.state.className + \" cutter\"}></div>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nexport default Cutter;","import React from \"react\"\r\nimport '../styles/option.css';\r\n\r\nconst Option = (props) => {\r\n\tlet type =  (props.categoryId === 1) ? \"radio\" : \"checkbox\";\r\n\r\n    return(\r\n\t    <label className=\"option\">\r\n\t        <input\r\n\t        \tname={\"option\"+props.questionId}\r\n\t        \tvalue={props.id}\r\n\t        \ttype={type}\r\n\t        \tonClick={() => props.onChooseOption(props.questionId, props.id, props.categoryId)} />\r\n\t        <div><span></span> {props.content}</div>\r\n\t\t</label>\r\n    )\r\n}\r\n\r\nexport default Option;\r\n","import React from \"react\";\r\nimport Option from '../components/Option';\r\nimport '../styles/question.css';\r\n\r\nconst Question = (props) => {\r\n\tlet options = props.options.map((option, i) => { \r\n\t\treturn (\r\n\t\t\t<Option\r\n\t\t\t \tquestionId={props.id}\r\n\t\t\t\tid={option.id}\r\n\t\t\t\tcontent={option.content}\r\n\t\t\t\tkey={option.id}\r\n\t\t\t\tcategoryId={props.categoryId}\r\n\t\t\t\tonChooseOption={props.onChooseOption}/>\r\n\t\t)                 \r\n\t});\r\n\r\n    return(\r\n        <div className=\"question\" data-id={props.id}>\r\n        \t<p>{props.eq}. {props.content}</p>\r\n        \t<div className=\"options\">\r\n        \t\t{options}\r\n        \t</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question;\r\n","import React, { Component } from 'react';\r\nimport CryptoJS from 'crypto-js';\r\nimport Question from '../components/Question';\r\nimport '../styles/questions.css';\r\n\r\nclass Questions extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\r\n\t\tthis.state = {\r\n\t\t\tdata: [],\r\n\t\t\tquestions: [],\r\n\t\t\tselections:{},\r\n\t\t\tposition: 0\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch(\"https://gist.githubusercontent.com/hifebriansyah/5f62028cf655a6b5af592986057d88ef/raw/\"+this.props.match.params.id)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then(result => {\r\n\t\t\t\tlet data = result.data;\r\n\r\n\t\t\t\tthis.shuffleArray(data);\r\n\r\n\t\t\t\tlet questions = data.map((question, i) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Question\r\n\t\t\t\t\t\t\teq={i+1}\r\n\t\t\t\t\t\t\tkey={question.id}\r\n\t\t\t\t\t\t\tid={question.id}\r\n\t\t\t\t\t\t\tcontent={question.content}\r\n\t\t\t\t\t\t\toptions={question.options}\r\n\t\t\t\t\t\t\tcategoryId={question.category.id}\r\n\t\t\t\t\t\t\tonChooseOption={(questionId, optionId, categoryId) => this.onChooseOption(questionId, optionId, categoryId)}/>\r\n\t\t\t\t\t)                 \r\n\t\t\t\t});\r\n\r\n\t\t\t\tthis.setState({questions, data});\r\n\t\t\t\tthis.renderQuestion();\r\n\t\t\t});\r\n\t}\r\n\r\n\tshuffleArray(array) {\r\n\t    for (let i = array.length - 1; i > 0; i--) {\r\n\t        const j = Math.floor(Math.random() * (i + 1));\r\n\t        [array[i], array[j]] = [array[j], array[i]];\r\n\t    }\r\n\t}\r\n\r\n\tonNavigate(count) {\r\n\t\tlet position = (count && (this.state.position < this.state.questions.length - 1))\r\n\t\t\t? this.state.position + 1\r\n\t\t\t: (!count && this.state.position > 0)\r\n\t\t\t\t? this.state.position - 1\r\n\t\t\t\t: this.state.position\r\n\r\n\t\tthis.setState({position}, () => {\r\n\t\t    this.renderQuestion();\r\n\t\t});\r\n\t}\r\n\r\n\tonChooseOption(questionId, optionId, categoryId) {\r\n\t\tlet selections = this.state.selections;\r\n\r\n\t\tselections[questionId] = [optionId];\r\n\r\n\t\tif(categoryId === 2) {\r\n\t\t\tvar checked = document.querySelectorAll('[name=option'+questionId+']:checked');\r\n\t\t    selections[questionId] = Array.prototype.map.call(checked, function (e) {return e.value;});\r\n\r\n\t\t\tif(!selections[questionId].length){\r\n\t\t\t\tdelete selections[questionId]\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.setState({selections}, () => {\r\n\t\t\tdocument.querySelector(\".finish\").style.display = (Object.keys(selections).length === this.state.questions.length) ? 'block' : 'none';\r\n\t\t});\r\n\t}\r\n\r\n\trenderQuestion() {\r\n\t\tlet questions = document.querySelectorAll('.question');\r\n\r\n\t\tfor (let i=0; i < questions.length; i++) {\r\n\t\t    questions[i].style.display = 'none';\r\n\t\t}\r\n\r\n\t\tlet options = document.getElementsByClassName(\"question\")[this.state.position].children[1];\r\n\r\n\t\tfor (let i = options.children.length; i >= 0; i--) {\r\n\t\t    options.appendChild(options.children[Math.random() * i | 0]);\r\n\t\t}\r\n\r\n\t\tfor (let i=0; i < options.children.length; i++) {\r\n\t\t     options.children[i].children[1].children[0].innerHTML = String.fromCharCode(65+i) + \")\";\r\n\t\t}\r\n\r\n\t\tdocument.getElementsByClassName(\"question\")[this.state.position].style.display = 'block';\r\n\t\tdocument.querySelector(\".previous\").style.display = (this.state.position !== 0) ? 'block' : 'none';\r\n\t\tdocument.querySelector(\".next\").style.display = (this.state.position !== this.state.questions.length - 1) ? 'block' : 'none';\r\n\t}\r\n\r\n\tonFinish() {\r\n\t\tlet selections = encodeURIComponent(CryptoJS.AES.encrypt(JSON.stringify(this.state.selections), 'selections'));\r\n\t\tlet questions = encodeURIComponent(CryptoJS.AES.encrypt(JSON.stringify(this.state.data), 'questions'));\r\n\t\twindow.location.replace(\"/validate.html?selections=\" + selections + \"&questions=\" +  questions);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"questions page\"> \r\n\t\t\t\t{this.state.questions}\r\n\t\t\t\t<div className=\"clear\">\r\n\t        \t\t<div className=\"previous\" onClick={() => this.onNavigate(0)}>previous</div>\r\n\t        \t\t<div className=\"next\" onClick={() => this.onNavigate(1)}>next</div>\r\n        \t\t</div>\r\n        \t\t<div className=\"finish\" onClick={() => this.onFinish()}>finish</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Questions;\r\n","import React from \"react\"\r\n\r\nconst New = (props) => {\r\n    return(\r\n        <div className=\"div\">\r\n            ini div\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default New;\r\n","import React, { Component } from 'react';\r\nimport CryptoJS from 'crypto-js';\r\nimport '../styles/result.css';\r\n\r\nclass Result extends Component {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\tresult: null\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\ttry {\r\n\t\t\tconst urlParams = new URLSearchParams(window.location.search);\r\n\t\t\tlet result = JSON.parse(CryptoJS.AES.decrypt(decodeURIComponent(urlParams.get('result')), 'result').toString(CryptoJS.enc.Utf8));\r\n\t\t\tconsole.log(result);\r\n\t    } catch (e) {}\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"result\">\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Result;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Menu from './pages/Menu';\r\nimport Cutter from './components/Cutter';\r\nimport Questions from './pages/Questions';\r\nimport New from './pages/New';\r\nimport Result from './pages/Result';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport './styles/index.css';\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\n\r\n\r\nconst AppRouter = () => (\r\n\t<Router>\r\n\t\t<div className=\"container\">\r\n\t\t\t<Route render={(props) => <Cutter {...props} />} />\r\n\t\t\t<nav>\r\n\t\t\t\t<ul>\r\n\t\t\t\t\t<li><Link to=\"/\">Menu</Link></li>\r\n\t\t\t\t</ul>\r\n\t\t\t</nav>\r\n\t\t\t<div className=\"pages\">\r\n\t\t\t\t<Switch>\r\n\t\t\t\t\t<Route path=\"/\" exact component={Menu} />\r\n\t\t\t\t\t<Route path=\"/result\" component={Result} />\r\n\t\t\t\t\t<Route path=\"/questions/:id\" component={Questions} />\r\n\t\t\t\t\t<Route path=\"/new\" component={New} />\r\n\t\t\t\t</Switch>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</Router>\r\n);\r\n\r\n\r\nReactDOM.render(<AppRouter />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}